namespace Opalenica;

internal class SerialCommands
{
    private readonly static Dictionary<string, byte[]> _commandsDec = new Dictionary<string, byte[]>()
    {
        { "zwr 1 -"   , new byte[] { 0x24, 0x30, 0x30, 0x30, 0x32, 0x30, 0x32, 0x25 } },
        { "zwr 1 +"   , new byte[] { 0x24, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x25 } },
        { "zwr 2ab -" , new byte[] { 0x24, 0x30, 0x31, 0x30, 0x32, 0x30, 0x33, 0x25 } },
        { "zwr 2ab +" , new byte[] { 0x24, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x25 } },
        { "zwr 2cd -" , new byte[] { 0x24, 0x30, 0x30, 0x30, 0x32, 0x30, 0x32, 0x25 } },
        { "zwr 2cd +" , new byte[] { 0x24, 0x30, 0x30, 0x30, 0x31, 0x30, 0x31, 0x25 } },
        { "zwr 3ab -" , new byte[] { 0x24, 0x30, 0x32, 0x30, 0x32, 0x30, 0x30, 0x25 } },
        { "zwr 3ab +" , new byte[] { 0x24, 0x30, 0x32, 0x30, 0x31, 0x30, 0x33, 0x25 } },
        { "zwr 3cd -" , new byte[] { 0x24, 0x30, 0x31, 0x30, 0x32, 0x30, 0x33, 0x25 } },
        { "zwr 3cd +" , new byte[] { 0x24, 0x30, 0x31, 0x30, 0x31, 0x30, 0x30, 0x25 } },
        { "zwr 4 -"   , new byte[] { 0x24, 0x30, 0x33, 0x30, 0x32, 0x30, 0x31, 0x25 } },
        { "zwr 4 +"   , new byte[] { 0x24, 0x30, 0x33, 0x30, 0x31, 0x30, 0x32, 0x25 } },
        { "zwr 6 -"   , new byte[] { 0x24, 0x30, 0x34, 0x30, 0x32, 0x30, 0x36, 0x25 } },
        { "zwr 6 +"   , new byte[] { 0x24, 0x30, 0x34, 0x30, 0x31, 0x30, 0x35, 0x25 } },
        { "zwr 7 -"   , new byte[] { 0x24, 0x30, 0x34, 0x30, 0x32, 0x30, 0x36, 0x25 } },
        { "zwr 7 +"   , new byte[] { 0x24, 0x30, 0x34, 0x30, 0x31, 0x30, 0x35, 0x25 } },
        { "zwr 10ab -", new byte[] { 0x24, 0x30, 0x36, 0x30, 0x32, 0x30, 0x34, 0x25 } },
        { "zwr 10ab +", new byte[] { 0x24, 0x30, 0x36, 0x30, 0x31, 0x30, 0x37, 0x25 } },
        { "zwr 10cd -", new byte[] { 0x24, 0x30, 0x35, 0x30, 0x32, 0x30, 0x37, 0x25 } },
        { "zwr 10cd +", new byte[] { 0x24, 0x30, 0x35, 0x30, 0x31, 0x30, 0x34, 0x25 } },
        { "zwr 11ab -", new byte[] { 0x24, 0x30, 0x37, 0x30, 0x32, 0x30, 0x35, 0x25 } },
        { "zwr 11ab +", new byte[] { 0x24, 0x30, 0x37, 0x30, 0x31, 0x30, 0x36, 0x25 } },
        { "zwr 11cd -", new byte[] { 0x24, 0x30, 0x36, 0x30, 0x32, 0x30, 0x34, 0x25 } },
        { "zwr 11cd +", new byte[] { 0x24, 0x30, 0x36, 0x30, 0x31, 0x30, 0x37, 0x25 } },
        { "zwr 12 -"  , new byte[] { 0x24, 0x30, 0x37, 0x30, 0x32, 0x30, 0x35, 0x25 } },
        { "zwr 12 +"  , new byte[] { 0x24, 0x30, 0x37, 0x30, 0x31, 0x30, 0x36, 0x25 } },
        { "zwr 13 -"  , new byte[] { 0x24, 0x30, 0x38, 0x30, 0x32, 0x30, 0x41, 0x25 } },
        { "zwr 13 +"  , new byte[] { 0x24, 0x30, 0x38, 0x30, 0x31, 0x30, 0x39, 0x25 } },
        { "zwr 14ab -", new byte[] { 0x24, 0x30, 0x39, 0x30, 0x32, 0x30, 0x42, 0x25 } },
        { "zwr 14ab +", new byte[] { 0x24, 0x30, 0x39, 0x30, 0x31, 0x30, 0x38, 0x25 } },
        { "zwr 14cd -", new byte[] { 0x24, 0x30, 0x38, 0x30, 0x32, 0x30, 0x41, 0x25 } },
        { "zwr 14cd +", new byte[] { 0x24, 0x30, 0x38, 0x30, 0x31, 0x30, 0x39, 0x25 } },
        { "zwr 15 -",   new byte[] { 0x24, 0x30, 0x39, 0x30, 0x32, 0x30, 0x42, 0x25 } },
        { "zwr 15 +",   new byte[] { 0x24, 0x30, 0x39, 0x30, 0x31, 0x30, 0x38, 0x25 } },

        { "sem a sz"  , new byte[] { 0x24, 0x32, 0x30, 0x32, 0x30, 0x30, 0x30, 0x25 } },
        { "sem a osz" , new byte[] { 0x24, 0x32, 0x30, 0x30, 0x30, 0x32, 0x30, 0x25 } },
        { "sem b sz"  , new byte[] { 0x24, 0x32, 0x32, 0x32, 0x30, 0x30, 0x32, 0x25 } },
        { "sem b osz" , new byte[] { 0x24, 0x32, 0x32, 0x30, 0x30, 0x32, 0x32, 0x25 } },
        { "sem c sz"  , new byte[] { 0x24, 0x32, 0x34, 0x32, 0x30, 0x30, 0x34, 0x25 } },
        { "sem c osz" , new byte[] { 0x24, 0x32, 0x34, 0x30, 0x30, 0x32, 0x34, 0x25 } },
        { "sem d sz"  , new byte[] { 0x24, 0x32, 0x39, 0x32, 0x30, 0x30, 0x39, 0x25 } },
        { "sem d osz" , new byte[] { 0x24, 0x32, 0x39, 0x30, 0x30, 0x32, 0x39, 0x25 } },
        { "sem e sz"  , new byte[] { 0x24, 0x32, 0x41, 0x32, 0x30, 0x30, 0x41, 0x25 } },
        { "sem e osz" , new byte[] { 0x24, 0x32, 0x41, 0x30, 0x30, 0x32, 0x41, 0x25 } },
        { "sem f sz"  , new byte[] { 0x24, 0x32, 0x42, 0x32, 0x30, 0x30, 0x42, 0x25 } },
        { "sem f osz" , new byte[] { 0x24, 0x32, 0x42, 0x30, 0x30, 0x32, 0x42, 0x25 } },
        { "sem g sz"  , new byte[] { 0x24, 0x32, 0x43, 0x32, 0x30, 0x30, 0x43, 0x25 } },
        { "sem g osz" , new byte[] { 0x24, 0x32, 0x43, 0x30, 0x30, 0x32, 0x43, 0x25 } },
        { "sem h sz"  , new byte[] { 0x24, 0x32, 0x44, 0x32, 0x30, 0x30, 0x44, 0x25 } },
        { "sem h osz" , new byte[] { 0x24, 0x32, 0x44, 0x30, 0x30, 0x32, 0x44, 0x25 } },
        { "sem l sz"  , new byte[] { 0x24, 0x32, 0x45, 0x32, 0x30, 0x30, 0x45, 0x25 } },
        { "sem l osz" , new byte[] { 0x24, 0x32, 0x45, 0x30, 0x30, 0x32, 0x45, 0x25 } },
        { "sem m sz"  , new byte[] { 0x24, 0x32, 0x46, 0x32, 0x30, 0x30, 0x46, 0x25 } },
        { "sem m osz" , new byte[] { 0x24, 0x32, 0x46, 0x30, 0x30, 0x32, 0x46, 0x25 } },
        { "sem n sz"  , new byte[] { 0x24, 0x32, 0x30, 0x32, 0x30, 0x30, 0x30, 0x25 } },
        { "sem n osz" , new byte[] { 0x24, 0x32, 0x30, 0x30, 0x30, 0x32, 0x30, 0x25 } },
        { "sem o sz"  , new byte[] { 0x24, 0x33, 0x31, 0x32, 0x30, 0x31, 0x31, 0x25 } },
        { "sem o osz" , new byte[] { 0x24, 0x33, 0x31, 0x30, 0x30, 0x33, 0x31, 0x25 } },
        { "sem p sz"  , new byte[] { 0x24, 0x33, 0x32, 0x32, 0x30, 0x31, 0x32, 0x25 } },
        { "sem p osz" , new byte[] { 0x24, 0x33, 0x32, 0x30, 0x30, 0x33, 0x32, 0x25 } },
        { "sem r sz"  , new byte[] { 0x24, 0x33, 0x33, 0x32, 0x30, 0x31, 0x33, 0x25 } },
        { "sem r osz" , new byte[] { 0x24, 0x33, 0x33, 0x30, 0x30, 0x33, 0x33, 0x25 } },
        { "sem s sz"  , new byte[] { 0x24, 0x33, 0x35, 0x32, 0x30, 0x31, 0x35, 0x25 } },
        { "sem s osz" , new byte[] { 0x24, 0x33, 0x35, 0x30, 0x30, 0x33, 0x35, 0x25 } },
    };

    public static byte[] GetCommand(string command)
    {
        if (_commandsDec.ContainsKey(command.ToLower()))
        {
            return _commandsDec[command.ToLower()];
        }
        return Array.Empty<Byte>();
    }
}
